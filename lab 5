class HashTable:
    def __init__(self, size):
        self.size = size
        self.hash_table = [[] for _ in range(self.size)]

    def set_value(self, key, value):
        hashed_key = hash(key) % self.size
        bucket = self.hash_table[hashed_key]
        for index, (k, v) in enumerate(bucket):
            if k == key:
                bucket[index] = (key, value) 
                return
        bucket.append((key, value))  

    def get_value(self, key):
        hashed_key = hash(key) % self.size
        bucket = self.hash_table[hashed_key]
        for k, v in bucket:
            if k == key:
                return v  
        return None  

    def __str__(self):
        return str(self.hash_table)

hashtable = HashTable(5)

while True:
    key = input("key:")
    if key == 'exit':
        break

    value = input("value: ")
    hashtable.set_value(key, value)  


    if any(hashtable.hash_table):  
        print("Hashtable:")
        print(hashtable)
        break
